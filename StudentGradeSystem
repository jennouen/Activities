Student Grading

using System;
using System.ComponentModel.Design;

namespace StudentGradingSystem
{
    class Student
    {
        private static string input, answer, name;
        private static int totalStudent;
        private static bool success;
        private static string[] studentData; //Array to store student names
        private static int[][] grade; //storing 3 subjects grade
        private static string[] subjects = { "Science", "Math", "English" };

        public static void GetTotal()
        {
            Console.WriteLine("Enter total student:");
            input = Console.ReadLine();

            success = int.TryParse(input, out totalStudent);
            if (success)
            {
                ShowMenu();
            }

            else
            {
                Console.WriteLine("Invalid input. Please try again");
                GetTotal();
            }

        }

        public static void ShowMenu()
        {

            int choice;

            Console.WriteLine("\nWelcome to the Student Grading System!\t");
            Console.WriteLine("[1]Enroll Students");
            Console.WriteLine("[2]Enter Student Grades");
            Console.WriteLine("[3]Show Student Grades");
            Console.WriteLine("[4]Show Top Student");
            Console.WriteLine("[5]Exit");
            Console.WriteLine("\nEnter Choice: \t");
            choice = Convert.ToInt32(Console.ReadLine());

            if (choice == 1)
            {
                studentData = new string[totalStudent]; //Initialize the array with the total student
                EnrollStudent();
            }
            else if (choice == 2)
            {
                grade = new int[totalStudent][]; //Initialize the array for grades
                StudentGrade();
            }
            else if (choice == 3)
            {
                ShowGrade();
            }
            else if (choice == 4)
            {
                TopStudent();
            }
            else if (choice == 5)
            {
                Console.Write("You are now existing the application. Bye!");
            }
            else
            {
                Console.WriteLine("Please enter valid input");
            }


        }

        public static void EnrollStudent() //method for enrolling student name
        {
            for (int i = 0; i < totalStudent; i++)
            {

                Console.WriteLine("\nEnrolling Student" + (i + 1));

                Console.WriteLine("\nEnter student name: \t");
                name = Console.ReadLine();

                if (string.IsNullOrWhiteSpace(name)) //validation if inputted name is empty or null
                {
                    Console.WriteLine("Please input a valid name, it shouldn't be empty.");
                    i--;
                }
                else if (Array.Exists(studentData, element => element == name)) //this will check if the name inputted already exist
                {
                    Console.WriteLine($"Student {name} is already enrolled. Please enter other student name.");
                    i--;
                }

                else
                {
                    studentData[i] = name; //store the name of the student

                        Console.WriteLine("\nEnter Again [Y/N]: \t"); //ask user if want to enroll another student
                        answer = Console.ReadLine();

                        if (answer.ToUpper() != "Y") //validation on the answer on "Enter Again" question
                        {
                            ShowMenu();
                            return;
                        }

                        else
                        {
                            continue;
                        }
                }

            }

        }

        public static void StudentGrade()
        {
            if (studentData == null || studentData.Length == 0) //validation if there are stored data in studentData array
            {
                Console.WriteLine("\nNo students enrolled. Please enroll students first.\t"); //prompt user
                ShowMenu() ;
                return;
            }

            else
            {
                int studGrade;

                for (int i = 0; i < totalStudent; i++)
                {
                    grade[i] = new int[3]; //create a new array for the grade of each subject
                    Console.WriteLine($"\nStudent Name: {studentData[i]}\t");

                    for (int j = 0; j < 3; j++)
                    {
                        Console.WriteLine($"\n{subjects[j]} Grade:\t"); //user input grade on every subject
                        string gradeInput = Console.ReadLine(); //stored user input into string

                        try
                        {
                            studGrade = Convert.ToInt32(gradeInput); //convert user input into integer

                        }
                        catch (FormatException)
                        {
                            Console.WriteLine("Invalid input. Please enter a numeric grade."); //prompt user to input valid numeric
                            j--;
                            continue;
                        }

                        grade[i][j] = studGrade; //store the grade if it's valid
                    }

                    Console.WriteLine("Enter grades for another student [Y/N]:"); //ask user if wanted to enter another student grade
                    answer = Console.ReadLine();

                    if (answer.ToUpper() != "Y") //validation on the answer on "Enter Again" question
                    {
                        ShowMenu();
                        return;
                    }

                    else
                    {
                        continue;
                    }

                }
            }

        }

        public static void ShowGrade()
        {
            if (studentData == null || studentData.Length == 0) //validation if there are stored data in studentData array
            {
                Console.WriteLine("\nNo students enrolled. Please enroll students first.\t");
                ShowMenu();
                return;
            }
            else if (grade == null || grade.Length == 0) //validation if there are stored data in grade array
            {
                Console.WriteLine("\nNo students grade enrolled. Please input students grade first.\t");
                ShowMenu();
                return;
            }

            else 
            {
                Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", "Name", "Science", "Math", "English", "Ave.");
                for (int i = 0; i < totalStudent; i++)
                {
                    int totalAverage = 0;
                    Console.Write("{0,-15}", studentData[i]);
                    for (int j = 0; j < 3; j++)
                    {
                        Console.Write("{0,-15}", grade[i][j]);
                        totalAverage += grade[i][j];
                    }
                    double averageGrade = totalAverage/3.0; //calculate average grade
                    Console.WriteLine("{0,-15}", averageGrade);
                } 
                ShowMenu();
            }

        }

        public static void TopStudent()
        {
            if (studentData == null || studentData.Length == 0) //validation if there are stored data in studentData array
            {
                Console.WriteLine("\nNo students enrolled. Please enroll students first.\t");
                ShowMenu();
                return;
            }

            else if (grade == null || grade.Length == 0) //validation if there are stored data in grade array
            {
                Console.WriteLine("\nNo students grade enrolled. Please input students grade first.\t");
                ShowMenu();
                return;
            }

            else
            {
                int maxTotal = int.MinValue;
                string topStudent = "";

                for (int i = 0;i < studentData.Length;i++)
                {
                    int studMark = 0;
                    for (int j = 0;j<3;j++)
                    {
                        studMark += grade[i][j];
                    }

                    if ( studMark > maxTotal )
                    {
                        maxTotal = studMark;
                        topStudent = studentData[i];
                    }
                }

                Console.WriteLine($"\nTop Student: {topStudent}");
            }

        }

        static void Main(string[] args)
        {
            GetTotal(); // call method
        }
    }
}
